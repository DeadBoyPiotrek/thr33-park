/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei';
import React, { useRef } from 'react';
// import { DirectionalLightHelper } from 'three';
export default function Model({ ...props }) {
  // const light = useRef();
  // useHelper(light, DirectionalLightHelper, 1);
  const group = useRef();
  const { nodes, materials } = useGLTF('/features/kicker6M/kicker6M.glb');
  return (
    <group
      ref={group}
      {...props}
      position={[-1.5, 0, 2]}
      dispose={null}
      scale={0.65}
    >
      <directionalLight
        // ref={light}
        castShadow
        position={[-5, 7, 10]}
        color="#ffffff"
        intensity={1}
        shadow-mapSize-width={1148}
        shadow-mapSize-height={1148}
        shadow-camera-far={30}
        shadow-camera-left={-10}
        shadow-camera-right={10}
        shadow-camera-top={10}
        shadow-camera-bottom={-10}
      />
      <group position={[0, 0.35, 0]} scale={[-6.35, -0.11, -6.35]}>
        <mesh
          receiveShadow
          geometry={nodes.Cube001_1.geometry}
          material={materials['snow base']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube001_2.geometry}
          material={materials['Material.010']}
        />
      </group>
      <group position={[10.27, 0.62, -11.11]}>
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube004_1.geometry}
          material={materials['Material.004']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube004_2.geometry}
          material={materials['Material.005']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube004_3.geometry}
          material={materials.snow}
        />
      </group>
      <group position={[11.34, 1.48, -4.37]} scale={0.19}>
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube006_1.geometry}
          material={materials['Material.004']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube006_2.geometry}
          material={materials.snow}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube006_3.geometry}
          material={materials.Material}
        />
      </group>
      <group
        position={[-1.76, 2.07, 1.2]}
        rotation={[0, -0.58, 0]}
        scale={[0.18, 0.12, 0.14]}
      >
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube007.geometry}
          material={materials['Material.006']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube007_1.geometry}
          material={materials.snow}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube007_2.geometry}
          material={materials['Material.008']}
        />
      </group>
      <group
        position={[9.64, 2.93, 4.26]}
        rotation={[0, -0.17, 0]}
        scale={[0.15, 0.19, 0.15]}
      >
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube008.geometry}
          material={materials['Material.009']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube008_1.geometry}
          material={materials['Material.011']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube008_2.geometry}
          material={materials['snow.001']}
        />
      </group>
      <group
        position={[11.46, 2.5, 4.74]}
        rotation={[0, -0.29, -0.07]}
        scale={0.75}
      >
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube009.geometry}
          material={materials['Material.012']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube009_1.geometry}
          material={materials['Material.013']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Cube009_2.geometry}
          material={materials['Material.014']}
        />
      </group>
      <mesh
        receiveShadow
        castShadow
        geometry={nodes.Cube005.geometry}
        material={materials['blue snow']}
        position={[4.32, 2.5, 0.04]}
      />
      <mesh
        receiveShadow
        castShadow
        geometry={nodes.Cube006.geometry}
        material={materials['blue snow']}
        position={[4.24, 1.07, -5.99]}
        scale={[2.56, 0.61, 2.81]}
      />
      <group position={[-4.11, 4.19, -1.71]} scale={0.4}>
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Icosphere003.geometry}
          material={nodes.Icosphere003.material}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Icosphere003_1.geometry}
          material={materials['snow.002']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Icosphere003_2.geometry}
          material={materials['green round tree']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Icosphere003_3.geometry}
          material={materials['brown round tree']}
        />
      </group>
      <group position={[-3.85, 2.05, -11.89]} scale={[0.4, 0.27, 0.4]}>
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Icosphere005.geometry}
          material={nodes.Icosphere005.material}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Icosphere005_1.geometry}
          material={materials['snow.002']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Icosphere005_2.geometry}
          material={materials['green round tree']}
        />
        <mesh
          receiveShadow
          castShadow
          geometry={nodes.Icosphere005_3.geometry}
          material={materials['brown round tree']}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/features/kicker6M/kicker6M.glb');
